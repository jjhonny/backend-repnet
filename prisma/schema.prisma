// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// criar uma migration: yarn prisma migrate dev
model Representante {
  cnpj          String        @id
  razao_social  String
  status        StatusUser
  email         String
  data_cadastro DateTime   @default(now())
  id_log        Int
  pedido        Pedido[]
  login         Login      @relation(fields: [id_log], references: [id])
}

model Cliente {
  cnpj          String        @id
  razao_social  String
  status        StatusUser
  email         String
  data_cadastro DateTime   @default(now())
  id_log        Int
  login         Login      @relation(fields: [id_log], references: [id])
  pedido        Pedido[]
}

model Login {
  id            Int             @id @default(autoincrement())
  password      String          @unique
  cliente       Cliente[]
  representante Representante[]
}

model Marca {
  id           Int       @id @default(autoincrement())
  razao_social String
  produto      Produto[]
}

model CategoriaProduto {
  id        Int       @id @default(autoincrement())
  descricao String
  produto   Produto[]
}

model Produto {
  id               Int              @id @default(autoincrement())
  descricao        String
  validade         String
  peso             Int
  preco            Float
  id_cat           Int
  id_marca         Int
  pedidoProduto    PedidoProduto[]
  categoriaProduto CategoriaProduto @relation(fields: [id_cat], references: [id])
  marca            Marca            @relation(fields: [id_marca], references: [id])
}

model Pedido {
  id            Int             @id @default(autoincrement())
  data_pedido   DateTime
  status        StatusPedido
  valor_total   Float
  cnpj_cli      String
  cnpj_rep      String
  cliente       Cliente         @relation(fields: [cnpj_cli], references: [cnpj])
  representante Representante   @relation(fields: [cnpj_rep], references: [cnpj])
  pedidoProduto PedidoProduto[]
}

model PedidoProduto {
  id_prod Int
  id_ped  Int
  pedido  Pedido  @relation(fields: [id_ped], references: [id])
  produto Produto @relation(fields: [id_prod], references: [id])

  @@id([id_prod, id_ped])
}

enum StatusUser {
  ATIVO
  INATIVO
}

enum StatusPedido {
  PENDENTE
  CANCELADO
  FINALIZADO
}
